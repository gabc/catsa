DROP SEQUENCE News_SEQ;
DROP SEQUENCE Texte_SEQ;
DROP SEQUENCE Creation_SEQ;
DROP SEQUENCE User_SEQ;
DROP SEQUENCE Categorie_SEQ;
DROP SEQUENCE Type_SEQ;
DROP SEQUENCE Image_SEQ;

CREATE SEQUENCE News_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE Texte_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE Creation_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE User_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE Categorie_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE Type_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE Image_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE OR REPLACE TRIGGER CS_News_TRG
BEFORE INSERT ON CS_News
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT News_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Texte_TRG
BEFORE INSERT ON CS_Texte
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT Texte_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Creation_TRG
BEFORE INSERT ON CS_Creation
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT Creation_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_User_TRG
BEFORE INSERT ON CS_User
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT User_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Categorie_TRG
BEFORE INSERT ON CS_Categorie
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT Categorie_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Type_TRG
BEFORE INSERT ON CS_Type
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT Type_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Image_TRG
BEFORE INSERT ON CS_Image
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT Image_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

--DATE de modification
--DATE de création lors du INSERT
CREATE OR REPLACE TRIGGER CS_News_Before_trg
BEFORE INSERT OR UPDATE ON CS_NEWS
FOR EACH ROW
BEGIN
  IF INSERTING THEN
    :new.created := sysdate;
  END IF;
  
  :new.lastModified := sysdate;
END;
