DROP SEQUENCE CS_News_SEQ;
DROP SEQUENCE CS_Texte_SEQ;
DROP SEQUENCE CS_Creation_SEQ;
DROP SEQUENCE CS_User_SEQ;
DROP SEQUENCE CS_Categorie_SEQ;
DROP SEQUENCE CS_Type_SEQ;
DROP SEQUENCE CS_Image_SEQ;

CREATE SEQUENCE CS_News_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE CS_Texte_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE CS_Creation_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE CS_User_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE CS_Categorie_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE CS_Type_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE CS_Image_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    NOCACHE;

CREATE OR REPLACE TRIGGER CS_News_TRG
BEFORE INSERT ON CS_News
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT CS_News_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Texte_TRG
BEFORE INSERT ON CS_Texte
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT CS_Texte_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Creation_TRG
BEFORE INSERT ON CS_Creation
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT CS_Creation_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_User_TRG
BEFORE INSERT ON CS_User
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT CS_User_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Categorie_TRG
BEFORE INSERT ON CS_Categorie
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT CS_Categorie_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Type_TRG
BEFORE INSERT ON CS_Type
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT CS_Type_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER CS_Image_TRG
BEFORE INSERT ON CS_Image
FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT CS_Image_SEQ.nextval INTO :new.ID FROM DUAL;
  END IF;
END;
/

--DATE de modification
--DATE de création lors du INSERT
CREATE OR REPLACE TRIGGER CS_News_Before_trg
BEFORE INSERT OR UPDATE ON CS_NEWS
FOR EACH ROW
BEGIN
  IF INSERTING THEN
    :new.created := sysdate;
  END IF;
  
  :new.lastModified := sysdate;
END;
